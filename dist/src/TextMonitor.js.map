{"version":3,"file":"TextMonitor.js","sourceRoot":"","sources":["../../src/TextMonitor.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { state } from 'lit/decorators.js';\nimport { finder } from '@medv/finder';\n\nexport class TextMonitor extends LitElement {\n  @state()\n  private _selection: Selection | null;\n\n  @state()\n  private _selectionParentElement: HTMLElement | null | undefined;\n\n  @state()\n  private _selector: String = '';\n\n  constructor() {\n    super();\n    this._selection = null;\n    this._selectionParentElement = null;\n    this.handleSelection = this.handleSelection.bind(this);\n    this.getFocusedElement = this.getFocusedElement.bind(this);\n  }\n\n  connectedCallback() {\n    // eslint-disable-next-line no-unused-expressions\n    super.connectedCallback && super.connectedCallback();\n    document.addEventListener('selectionchange', this.handleSelection);\n    document.addEventListener('focus', this.getFocusedElement, true);\n  }\n\n  disconnectedCallback() {\n    document.removeEventListener('selectionchange', this.handleSelection);\n    document.removeEventListener('focus', this.getFocusedElement, true);\n    // eslint-disable-next-line no-unused-expressions\n    super.disconnectedCallback && super.disconnectedCallback();\n  }\n\n  handleSelection() {\n    this._selection = document.getSelection();\n    this._selectionParentElement = this._selection?.anchorNode?.parentElement;\n\n    // queued updates getting lost when user highlights, so request update each time to keep UI in sync\n    this.requestUpdate();\n  }\n\n  static styles = css`\n    :host {\n      box-sizing: border-box;\n      padding: 15px;\n      min-width: 300px;\n      border: 2px solid darkgray;\n      box-shadow: gray 2px 2px 8px;\n      background-color: white;\n      position: absolute;\n      right: 30px;\n      top: 30px;\n      z-index: 99999;\n    }\n  `;\n\n  getSelectedText() {\n    if (this._selection && !this._selection.isCollapsed) {\n      return html`<pre>${this._selection?.toString()}</pre>`;\n    }\n\n    return html`<em>no text selected, yet</em>`;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getFocusedElement() {\n    if (document.activeElement === document.body) {\n      return;\n    }\n\n    const el = document.activeElement;\n    let text;\n\n    // for a dropdown\n    if (el instanceof HTMLSelectElement) {\n      const index = el.selectedIndex;\n\n      text = el.children[index].textContent;\n    } else {\n      text = el?.textContent;\n    }\n    this.requestUpdate();\n\n    return html`<pre>${text}</pre>`;\n  }\n\n  trackSelectedText() {\n    if (this._selectionParentElement instanceof HTMLElement) {\n      this._selector = finder(this._selectionParentElement);\n\n      console.log('selector', this._selector);\n    } else {\n      console.log('invalid selector');\n    }\n  }\n\n  render() {\n    return html`\n      <div>\n        <h1>Text Tracker</h1>\n        <details>\n          <summary>Instructions</summary>\n          <ol>\n            <li>\n              Select some text or focus on something (like a form field) on the\n              screen\n            </li>\n            <li>Press the Track button</li>\n            <li>If the correct text is not showing up, try selecting something else on the page and coming back to what you want to track</li>\n          </ol>\n        </details>\n\n        <p>Selected text: ${this.getSelectedText()}</p>\n        <p>Focused element: ${this.getFocusedElement()}</p>\n\n        <button type=\"button\" @click=\"${this.trackSelectedText}\">Track</button>\n      </div>\n    `;\n  }\n}\n"]}